package com.example.demo.controller;

import com.example.demo.model.Book;
import com.example.demo.repository.BookRepository;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/books")
@CrossOrigin(origins = "http://localhost:5173") // ✅ allow frontend
public class BookController {

    private final BookRepository repo;

    public BookController(BookRepository repo) {
        this.repo = repo;
    }

    // ✅ Get all books
    @GetMapping
    public ResponseEntity<List<Book>> getBooks() {
        return ResponseEntity.ok(repo.findAll());
    }

    // ✅ Add a new book
    @PostMapping
    public ResponseEntity<?> addBook(@RequestBody Book book) {
        try {
            Book saved = repo.save(book);
            return ResponseEntity.ok().body(
                    new java.util.HashMap<String, Object>() {{
                        put("message", "Book added successfully!");
                        put("book", saved);
                    }}
            );
        } catch (Exception e) {
            return ResponseEntity.status(500).body(
                    new java.util.HashMap<String, String>() {{
                        put("error", "Failed to add book: " + e.getMessage());
                    }}
            );
        }
    }

    // ✅ Delete book
    @DeleteMapping("/{id}")
    public ResponseEntity<?> deleteBook(@PathVariable Long id) {
        if (!repo.existsById(id)) {
            return ResponseEntity.status(404).body(
                    new java.util.HashMap<String, String>() {{
                        put("error", "Book not found");
                    }}
            );
        }
        repo.deleteById(id);
        return ResponseEntity.ok(
                new java.util.HashMap<String, String>() {{
                    put("message", "Book deleted successfully!");
                }}
        );
    }
}
