package controller;

import Model.User;
import Repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/auth")
@CrossOrigin(origins = "http://localhost:3000")
public class UserController {

    @Autowired
    private UserRepository userRepo;

    private BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();

    // Signup
    @PostMapping("/signup")
    public String signup(@RequestBody User user) {
        if (userRepo.findByEmail(user.getEmail()) != null) {
            return "‚ùå Email already registered!";
        }
        user.setPassword(encoder.encode(user.getPassword()));
        userRepo.save(user);
        return "‚úÖ Account created!";
    }

    // Login
    @PostMapping("/login")
    public String login(@RequestBody User loginUser) {
        User user = userRepo.findByEmail(loginUser.getEmail());
        if (user != null && encoder.matches(loginUser.getPassword(), user.getPassword())) {
            return JwtUtil.generateToken(user.getEmail());
        }
        return "‚ùå Invalid email or password!";
    }

    // Protected endpoint
    @GetMapping("/profile")
    public String profile(@RequestHeader("Authorization") String token) {
        try {
            String email = JwtUtil.validateToken(token.replace("Bearer ", ""));
            return "üîê Profile data for user: " + email;
        } catch (Exception e) {
            return "‚ùå Invalid or expired token!";
        }
    }
}
